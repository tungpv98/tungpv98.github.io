<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Tung&#39;s Blog</title>
        <link>https://tungpv98.github.io/</link>
        <description></description>
        <generator>Hugo 0.68.3 https://gohugo.io/</generator>
        
            <language>en</language>
        
        
            <managingEditor>tungpv98@gmail.com (gnuT_98)</managingEditor>
        
        
            <webMaster>tungpv98@gmail.com (gnuT_98)</webMaster>
        
        
        <lastBuildDate>Fri, 22 Jan 2021 08:18:28 +0700</lastBuildDate>
        
            <atom:link rel="self" type="application/rss+xml" href="https://tungpv98.github.io/rss.xml" />
        
        
            
                <item>
                    <title>Tích hợp &#34;Mod Security&#34; cho Web Application Server để chống lại SQL Injection và tấn công XSS</title>
                    <link>https://tungpv98.github.io/posts/hello-world/</link>
                    <guid isPermaLink="true">https://tungpv98.github.io/posts/hello-world/</guid>
                    <pubDate>Thu, 21 Jan 2021 14:34:56 +0700</pubDate>
                    <description><![CDATA[<h1 id="giới-thiệu">GIỚI THIỆU</h1>
<ul>
<li><a href="https://en.wikipedia.org/wiki/ModSecurity">Mod Security</a> là một module tường lửa có thể tích hợp với các <a href="https://en.wikipedia.org/wiki/Application_server">Web Application Server</a> (máy chủ ứng dụng web) như Apache, IIS, Nginx cho phép phân tích và ghi nhật ký các luồng dữ liệu HTTP/S.Với sự đóng góp từ dự án <a href="https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project">ModSecurity Core Rule Set</a> của tổ chức OWASP đã giúp ModSecurity trở nên mạnh mẽ và linh động hơn trong việc phân tích các hành vi có nguy cơ xâm hại an ninh ứng dụng web.</li>
<li>Mod Security đứng trước Web Server, làm nhiệm vụ như một firewall để kiểm soát truy cập vào ra Web Server. Các thông tin đi từ bên ngoài vào và bên trong ra sẽ được kiểm soát chặt chẽ để tránh những thông tin có thể gây hại cho Web Server hay là việc rò rỉ các thông tin đặc biệt từ Web Server đến Client.</li>
</ul>
<p><img src="https://images.viblo.asia/e5f7886a-8fdd-486b-a2a2-7ed86660645b.png" alt=""></p>
<ul>
<li>Mod Security có thể :</li>
</ul>
<ol>
<li>Request filtering: tất cả các request gửi đến web server đều được phân tích và càn lọc (filter) trước khi chúng được đưa đến các modules khác để xử lý.</li>
<li>Anti-evasion techniques: paths và parameters được chuẩn hóa trước khi phân tích để chống evasion techniques.</li>
<li>Understanding of the HTTP protocol: ModSecurity là web application firewall nên nó có khả năng hiểu được HTTP protocol. ModSecurity có khả năng càn lọc dựa trên các thông tin ở HTTP header hay có thể xem xét đến từng parameters hay cookies của các requests…</li>
<li>POST payload analysis: ngoài việc càn lọc dựa trên HTTP header, ModSecurity có thể dựa trên nội dung (payload) của POST request.</li>
<li>Audit logging: mọi request đều có thể được ghi lại (bao gồm cả POST) để người quản trị có thể theo dõi nếu cần.</li>
<li>HTTPS filtering: ModSecurity có thể phân tích HTTPS.</li>
<li>Compressed content filtering: ModSecurity sẽ phân tích sau khi đã decompress các request data.</li>
</ol>
<ul>
<li>Và trong bài viết này chúng ta sẽ tiến hành tích hợp Mod Security cho Apache Web Server để chống lại SQL Injection và tấn công XSS.</li>
</ul>
<h1 id="1-sql-injection-và-tấn-công-xss-khi-chưa-tích-hợp-mod-security">1. SQL Injection và tấn công XSS khi chưa tích hợp Mod Security</h1>
<p>Để thử nghiệm SQL Injection và tấn công XSS thì mình sử dụng <a href="https://github.com/ethicalhack3r/DVWA">Damn Vulnerable Web Application (DVWA)</a> một ứng dụng mã nguồn PHP tập hợp sẵn các lỗi logic về bảo mật trong đó có SQL Injection và XSS.
Sau khi tải mã nguồn từ : <a href="https://github.com/ethicalhack3r/DVWA,">https://github.com/ethicalhack3r/DVWA,</a> giải nén vào thư mục C:\xampp\htdocs, khởi chạy và đăng nhập bằng tài khoản username/password: admin/password thì giao diện trang web như sau:</p>
<p><img src="https://images.viblo.asia/d0c04ae4-15e6-4285-b5db-91ebf9bdc466.PNG" alt=""></p>
<h2 id="11-thử-nghiệm-sql-injection">1.1 Thử nghiệm SQL Injection</h2>
<p>Vào SQL Injection nhập vào <code>%' or '0'='0</code> và submit</p>
<p><img src="https://images.viblo.asia/81ef4196-8ae0-46c2-babf-98a588be71fa.PNG" alt=""></p>
<p>Kết quả sẽ nhận được thông tin của tất cả các users có trong cơ sở dữ liệu. Bởi vì câu truy vấn lúc này được hiểu là : <code>SELECT * FROM users WHERE user_id = '%' or '0'='0'</code></p>
<h2 id="12-thử-nghiệm-xss">1.2 Thử nghiệm XSS</h2>
<p>Vào XSS stored và submit đoạn script sau: <code>&lt;script&gt;alert(&quot;Hacked! – KMA&quot;)&lt;/script&gt;</code>:</p>
<p><img src="https://images.viblo.asia/48963635-c553-4709-a729-2384159d592c.PNG" alt=""></p>
<p>Sau khi submit đoạn script trên thì mỗi lần truy cập vào, trang web sẽ hiện một thông báo cho người dùng như sau:</p>
<p><img src="https://images.viblo.asia/fd53ef7f-1b77-44f9-8650-8d72b3c4e9fe.PNG" alt=""></p>
<p>Qua một vài thao tác đơn giản có thể thấy được lỗi SQL Injection và XSS rất dễ dàng bị khai thác. Vì vậy cần có phương pháp để chống lại các dạng tấn công này.
Có rất nhiều phương pháp để chống lại tấn công SQL Injection và XSS nhưng trong bài viết này mình chỉ đề cập đến phương pháp tích hợp tường lửa và cụ thể là Mod Security trên Apache.</p>
<h1 id="2-cài-đặt-và-cấu-hình-mod-security">2 Cài đặt và cấu hình Mod Security</h1>
<h2 id="21-cài-đặt">2.1 Cài đặt</h2>
<p><strong>Truy cập vào  <a href="https://www.apachelounge.com/download/">https://www.apachelounge.com/download/</a> và tải về mod_security tương ứng.</strong></p>
<p><img src="https://images.viblo.asia/a1dcd589-50b0-4628-8769-d12d91c0fd37.PNG" alt=""></p>
<p><strong>Giải nén và tìm 2 file <code>mod_security2.so</code> và <code>yajl.dll</code> trong thư mục vừa giải nén.</strong></p>
<ul>
<li>copy <code>mod_security2.so</code> vào <code>...\apache\modules</code></li>
<li>copy <code>yajl.dll</code> vao <code>...\apache\bin</code></li>
</ul>
<p><strong>Mở file <code>httpd.conf</code> của Xampp và thêm vào các dòng sau:</strong></p>
<p><code>LoadModule security2_module modules/mod_security2.so</code></p>
<p><code>SecRuleEngine DetectionOnly</code></p>
<p><code>&lt;IfModule security2_module&gt;</code></p>
<p><code>SecRuleEngine On</code></p>
<p><code>SecDefaultAction &quot;phase:2,deny,log,status:403&quot;</code></p>
<p><code>Include conf/sqlinjection.conf</code></p>
<p><code>Include conf/xss.conf</code></p>
<p><code>&lt;/IfModule&gt;</code></p>
<p><img src="https://images.viblo.asia/500f34af-ef20-4d00-9ba5-165ea0595da6.jpg" alt=""></p>
<h2 id="22-tạo-file-conf-để-thiết-lập-rules">2.2 Tạo file conf để thiết lập rules</h2>
<p><strong>Tiến hành tạo 2 file <code>sqlinjection.conf</code> và <code>xss.conf</code> trong thư mục <code>apache\conf</code> của Xampp.</strong></p>
<p><strong>Clone toàn bộ <a href="https://raw.githubusercontent.com/SEC642/modsec/master/rules/base_rules/modsecurity_crs_41_sql_injection_attacks.conf">rules SQL Injection</a> vào file <code>sqlinjection.conf</code> và <a href="https://github.com/SEC642/modsec/blob/master/rules/base_rules/modsecurity_crs_41_xss_attacks.conf">rules XSS Injection</a> vào file <code>xss.conf</code>.</strong></p>
<p>Tiến hành restart lại Xampp Apache. Thử nghiệm lại tấn công SQL Injection và XSS như ở phần 1. Kết quả như hình:</p>
<p><img src="https://images.viblo.asia/571490c9-7c33-4e9d-89ea-8b5a6d64f179.PNG" alt=""></p>
<p>Và đồng thời file nhật ký ghi nhận được request xấu từ người dùng đã bị chặn lại:</p>
<p><img src="https://images.viblo.asia/3e272a12-b924-48d5-9e2f-f1201ce55c7f.PNG" alt=""></p>
<p>Video demo:</p>
<p>{@embed: <a href="https://www.youtube.com/watch?v=WRb69P-Oe8Y%7D">https://www.youtube.com/watch?v=WRb69P-Oe8Y}</a></p>
<h1 id="kết-luận">Kết luận</h1>
<p>Chỉ một vài bước đơn giản, chúng ta đã có thể chống lại tấn công SQL Injection và XSS mà không cần phải chỉnh sửa lại mã nguồn của trang web. Bằng việc kết hợp Mod Security và các bộ rules do tổ chức OWASP để chống lại nhiều loại tấn công phổ biến vào ứng dụng web. Cũng như có thể viết ra các rules phù hợp với mục đích sử dụng của riêng từng cá nhân và công ty. Chi phí đầu tư thấp, được hỗ trợ rộng rãi bởi cộng đồng bảo mật vì vậy giải pháp sử dụng Mod Security là một lựa chọn rất tốt trong việc bảo mật cho ứng dụng web.</p>
<h3 id="cuối-cùng">Cuối cùng</h3>
<p>Bài viết được viết trên sự hiểu biết có hạn của cá nhân mình, có gì sai sót mong được mọi người góp ý! <strong>Thank all!</strong></p>
<h1 id="tham-khảo">Tham Khảo</h1>
<p><a href="https://en.wikipedia.org/wiki/ModSecurity">https://en.wikipedia.org/wiki/ModSecurity</a></p>
<p><a href="https://keirstenbrager.tech/sql-vs-xxs-injection-attacks-explained/">https://keirstenbrager.tech/sql-vs-xxs-injection-attacks-explained/</a></p>
]]></description>
                    
                        
                    
                    
                        
                            
                        
                            
                        
                    
                </item>
            
        
            
                <item>
                    <title>Export file pdf từ html trong ứng dụng Rails</title>
                    <link>https://tungpv98.github.io/posts/export_file_pdf_from_html_in_rails/</link>
                    <guid isPermaLink="true">https://tungpv98.github.io/posts/export_file_pdf_from_html_in_rails/</guid>
                    <pubDate>Fri, 22 Jan 2021 08:17:31 +0700</pubDate>
                    <description><![CDATA[<p>Pdf là một trong những định dạng phổ biến hiện nay, với ưu điểm là chất lượng cao và không dễ bị thay đổi font chữ hay bố cục của nội dung. Vì thế pdf thường xuyên được sử dụng để lưu trữ những nội dung sau khi đã hoàn thiện và dùng chúng để trao đổi qua mạng. Trong một số website nhiều tác vụ cũng cần đến việc lưu trữ thành định dạng pdf để thuận tiện cho việc lưu trữ lại của người dùng, vì thế hôm nay mình viết bài viết này để tạo một website đơn giản bằng Ruby on Rails có tích hợp tính năng xuất file pdf từ thông tin của trang web với gem PDFKit !!!</p>
<h1 id="tạo-ứng-dụng-rails">Tạo ứng dụng Rails</h1>
<p>Tạo một ứng dụng với tên là invoices (hóa đơn) và thêm 2 models:</p>
<pre><code>$ rails new invoices -d mysql
$ cd invoices
 
$ rails generate model invoice date:date client notes total
$ rails generate model line_item description price:float invoice:references
</code></pre><p>sau đó thêm một số dữ liệu mẫu vào cơ sở dữ liệu bằng cách thêm vào file <code>db/seeds.rb.</code></p>
<pre><code>invoice = Invoice.create(
  client: 'Tùng Phan',
  total: 165000,
  date: Date.new(2020, 2, 17))

LineItem.create([
  { invoice_id: invoice.id, description: 'Tuổi trẻ đáng giá bao nhiêu???', price: 96000 },
  { invoice_id: invoice.id, description: 'Mắt Biếc (Tái Bản 2019)', price: 69000} ])
</code></pre><p>Chạy lệnh rails db:seed trong terminal để thêm hóa đơn mẫu vào cơ sở dữ liệu.</p>
<h3 id="tạo-controller-and-view">Tạo controller and view</h3>
<p>chạy lệnh <code>rails generate controller Invoices index show</code>để tạo controllers và views.</p>
<p><em><strong>app/models/invoice.rb</strong></em></p>
<pre><code>class Invoice &lt; ApplicationRecord
  has_many :line_items
end
</code></pre><p><em><strong>app/models/line_item.rb</strong></em></p>
<pre><code>class LineItem &lt; ApplicationRecord
  belongs_to :invoice
end
</code></pre><p><em><strong>app/controllers/invoicescontroller.rb</strong></em></p>
<pre><code> class InvoicesController &lt; ApplicationController
  def index
    @invoices = Invoice.all
  end
 
  def show
    @invoice = Invoice.find(params[:id])
  end
end
</code></pre><p><em><strong>app/views/invoices/index.html.erb</strong></em></p>
<pre><code>&lt;h1&gt;HÓA ĐƠN&lt;/h1&gt;
&lt;ul&gt;
  &lt;% @invoices.each do |invoice| %&gt;
  &lt;li&gt;
    &lt;%= link_to &quot;#{invoice.id} - #{invoice.client} - #{invoice.date.strftime(&quot;%B %d, %Y&quot;)} &quot;, invoice_path(invoice) %&gt;
  &lt;/li&gt;
  &lt;% end %&gt;
&lt;/ul&gt;
</code></pre><p><em><strong>app/views/invoices/show.html.erb</strong></em></p>
<pre><code>&lt;div class=&quot;invoice&quot;&gt;
  &lt;h1&gt;CHI TIẾT HÓA ĐƠN&lt;/h1&gt;

  &lt;h3&gt;KHÁCH HÀNG: &lt;%= @invoice.client %&gt;&lt;/h3&gt;
  &lt;h3&gt;NGÀY: &lt;%= @invoice.date.strftime(&quot;%B %d, %Y&quot;) %&gt;&lt;/h3&gt;

  &lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;TÊN SÁCH&lt;/th&gt;
          &lt;th&gt;GIÁ&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;% @invoice.line_items.each do |line_item| %&gt;
          &lt;tr&gt;
            &lt;td&gt;&lt;%= line_item.description %&gt;&lt;/td&gt;
            &lt;td&gt;&lt;%= number_to_currency(line_item.price) %&gt;&lt;/td&gt;
          &lt;/tr&gt;
        &lt;% end %&gt;
        &lt;tr class=&quot;total&quot;&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;THÀNH TIỀN: &lt;/td&gt;
          &lt;td&gt;&lt;%= number_to_currency(@invoice.total) %&gt;&lt;/span&gt;&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
  &lt;/table&gt;

  &lt;% if @invoice.notes %&gt;
  &lt;div class=&quot;notes&quot;&gt;
    &lt;p&gt;&lt;strong&gt;LƯU Ý:&lt;/strong&gt; &lt;%= @invoice.notes %&gt;&lt;/p&gt;
  &lt;/div&gt;
  &lt;% end %&gt;
&lt;/div&gt;

</code></pre><p><em><strong>app/assets/stylesheets/application.scss</strong></em></p>
<pre><code>.invoice {
  width: 700px;
  max-width: 700px;
  border: 1px solid grey;
  margin: 50px;
  padding: 50px;
 
  h1 {
    text-align: center;
    margin-bottom: 100px;
  }
  .notes {
    margin-top: 100px;
  }
 
  table {
    width: 90%;
    text-align: left;
  }
  th {
    padding-bottom: 15px;
  }
 
  .total td {
    font-size: 20px;
    font-weight: bold;
    padding-top: 25px;
  }
}
</code></pre><p>Sau đó <code>rails s</code> và truy cập vào <code>localhost:3000</code> và vào xem chi tiết hóa đơn</p>
<p><img src="https://images.viblo.asia/a2777314-cc74-4c3a-919d-ef77f04a1cbd.PNG" alt=""></p>
<p>Chi tiết hóa đơn</p>
<p><img src="https://images.viblo.asia/03a6eca3-6e49-4299-84d9-343dc6ac425e.PNG" alt=""></p>
<h1 id="tích-hợp-chức-năng-export-pdf">Tích hợp chức năng export Pdf</h1>
<h3 id="thêm-các-gem-vào-gem-file">Thêm các gem vào gem file</h3>
<pre><code>gem 'pdfkit'
gem 'render_anywhere'
gem 'wkhtmltopdf-binary'
</code></pre><p>Sau đó chạy lệnh <code>bundle install</code> để cài đặt các gem vừa thêm vào</p>
<h3 id="tạo-một-class-invoicepdf-trong-thư-mục-appmodels">Tạo một class InvoicePdf trong thư mục app/models</h3>
<p><em><strong>app/models/Invoice_pdf.rb</strong></em></p>
<pre><code>require &quot;render_anywhere&quot;
 
class InvoicePdf
  include RenderAnywhere
 
  def initialize(invoice)
    @invoice = invoice
  end
 
  def to_pdf
    kit = PDFKit.new(as_html, page_size: 'A4')
    kit.to_file(&quot;#{Rails.root}/public/invoice.pdf&quot;)
  end
 
  def filename
    &quot;Invoice #{invoice.id}.pdf&quot;
  end
 
  private
 
    attr_reader :invoice
 
    def as_html
      render template: &quot;invoices/pdf&quot;, layout: &quot;invoice_pdf&quot;, locals: { invoice: invoice }
    end
end
</code></pre><p><em><strong>app/views/invoices/pdf.html.erb</strong></em></p>
<pre><code>&lt;div class=&quot;invoice&quot;&gt;
  &lt;h1&gt;CHI TIẾT HÓA ĐƠN&lt;/h1&gt;
 
  &lt;h3&gt;To: &lt;%= invoice.client %&gt;&lt;/h3&gt;
  &lt;h3&gt;Date: &lt;%= invoice.date.strftime(&quot;%B %d, %Y&quot;) %&gt;&lt;/h3&gt;
 
  &lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;TÊN SÁCH&lt;/th&gt;
          &lt;th&gt;GIÁ&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;% invoice.line_items.each do |line_item| %&gt;
          &lt;tr&gt;
            &lt;td&gt;&lt;%= line_item.description %&gt;&lt;/td&gt;
            &lt;td&gt;&lt;%= number_to_currency(line_item.price) %&gt;&lt;/td&gt;
          &lt;/tr&gt;
        &lt;% end %&gt;
        &lt;tr class=&quot;total&quot;&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;Total: &lt;/td&gt;
          &lt;td&gt;&lt;%= number_to_currency(invoice.total) %&gt;&lt;/span&gt;&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
  &lt;/table&gt;
 
  &lt;% if invoice.notes %&gt;
  &lt;div class=&quot;notes&quot;&gt;
    &lt;p&gt;&lt;strong&gt;LƯU Ý:&lt;/strong&gt; &lt;%= invoice.notes %&gt;&lt;/p&gt;
  &lt;/div&gt;
  &lt;% end %&gt;
&lt;/div&gt;
</code></pre><p><em><strong>app/views/layouts/invoice_pdf.html.erb</strong></em></p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;Envato Invoices&lt;/title&gt;
  &lt;style&gt;
    &lt;%= Rails.application.assets.find_asset('application.scss').to_s %&gt;
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;%= yield %&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h3 id="tạo-downloadscontroller-để-render-hóa-đơn-pdf">Tạo DownloadsController để Render hóa đơn PDF</h3>
<p><code>config/routes.rb</code></p>
<pre><code>Rails.application.routes.draw do
  root to: &quot;invoices#index&quot;
 
  resources :invoices, only: [:index, :show] do
    resource :download, only: [:show]
  end
end
</code></pre><p><em><strong>app/controllers/downloadscontroller.rb</strong></em></p>
<pre><code>class DownloadsController &lt; ApplicationController
 
  def show
    respond_to do |format|
      format.pdf { send_invoice_pdf }
    end
  end
 
  private
 
  def invoice_pdf
    invoice = Invoice.find(params[:invoice_id])
    InvoicePdf.new(invoice)
  end
 
  def send_invoice_pdf
    send_file invoice_pdf.to_pdf,
      filename: invoice_pdf.filename,
      type: &quot;application/pdf&quot;,
      disposition: &quot;inline&quot;
  end
end
</code></pre><p>Thêm link download pdf vào hóa đơn : <code>app/views/invoices/show.html.erb</code></p>
<pre><code>&lt;%= link_to &quot;Download PDF&quot;,
  invoice_download_path(@invoice, format: &quot;pdf&quot;),
  target: &quot;_blank&quot;,
  class: &quot;download&quot; %&gt;
</code></pre><p>Chạy <code>rails s</code> chuyển đến hóa đơn chi tiết, click vào <code>Download PDF</code>một tab mới sẽ hiện file pdf hóa đơn!!!</p>
<h2 id="tài-liệu-tham-khảo">Tài liệu tham khảo</h2>
<p><a href="https://www.pdftron.com/blog/rails/how-to-generate-pdf-with-ruby-on-rails/">https://www.pdftron.com/blog/rails/how-to-generate-pdf-with-ruby-on-rails/</a></p>
<p><a href="https://code.tutsplus.com/tutorials/generating-pdfs-from-html-with-rails--cms-22918">https://code.tutsplus.com/tutorials/generating-pdfs-from-html-with-rails--cms-22918</a></p>
]]></description>
                    
                        
                    
                    
                        
                            
                        
                            
                        
                    
                </item>
            
        
    </channel>
</rss>